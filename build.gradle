buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1'
  }
}

ext {
  project_website = "https://github.com/${developerId}/${projectId}"
  project_scm = "scm:git@github.com:${developerId}/${projectId}.git"
  license_url = "https://raw.github.com/${developerId}/${projectId}/master/LICENSE"
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'ru.shadam.grefresher'
version = '0.3-SNAPSHOT'
def rootProject = project

if(!project.hasProperty('bintrayUser')) {
  ext.bintrayUser = ''
}

if(!project.hasProperty('bintrayKey')) {
  ext.bintrayKey = ''
}

project(':libs:grefresher') {
  group = rootProject.group
  version = rootProject.version
  apply plugin: 'groovy'
  apply plugin: 'maven-publish'
  apply plugin: 'com.jfrog.artifactory'
  apply plugin: 'com.jfrog.bintray'
  
  sourceCompatibility = '1.7'
  targetCompatibility = '1.7'

  repositories {
    mavenLocal()
    mavenCentral()
  }

  dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.codehaus.groovy:groovy-backports-compat23:2.3.6'
    compile('org.eclipse.jetty:jetty-util:9.2.3.v20140905')
    testCompile 'junit:junit:4.11'
  }

  // install is called after build
  project.tasks.build.finalizedBy project.tasks.publishToMavenLocal

  task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates sources jar') {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  task javadocJar(type: Jar, description: 'Creates javadoc jar') {
    dependsOn javadoc
    classifier = 'javadoc'
    from javadoc.destinationDir
    if(tasks.findByName('groovydoc')) {
      dependsOn groovydoc
      from groovydoc.destinationDir
    }
  }

  artifacts {
    archives sourcesJar, javadocJar
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        pom.withXml {
          asNode().with {
            appendNode('name', rootProject.name)
            appendNode('packaging', 'jar')
            appendNode('description', rootProject.description)
            appendNode('url', rootProject.project_website)
            appendNode('scm').with {
              appendNode('url', rootProject.project_scm)
              appendNode('connection', rootProject.project_scm)
              appendNode('developerConnection', rootProject.project_scm)
            }
            appendNode('licenses').with {
              appendNode('license').with {
                appendNode('name', rootProject.license)
                appendNode('url', rootProject.license_url)
                appendNode('distribution', 'repo')
              }
            }
            appendNode('developers').with {
              appendNode('developer').with {
                appendNode('id', rootProject.developerId)
                appendNode('name', rootProject.developerName)
              }
            }
            it
          }
        }

        from components.java

        artifact sourcesJar {
          classifier 'sources'
        }

        artifact javadocJar {
          classifier "javadoc"
        }
      }
    }
  }

  bintray {
    user = rootProject.bintrayUser
    key = rootProject.bintrayKey

    publications = ['mavenJava']
    dryRun = false
    publish = true
    pkg {
      repo = 'maven'
      name = rootProject.projectId
      desc = rootProject.description
      licenses = [ rootProject.license ]
      // labels [ rootProject.projectLabels.split(',') ]
      version {
        attributes = [ 'gradle-plugin': 'ru.shadam.grefresher:ru.shadam.grefresher:grefresher' ]
      }
    }
  }

  bintrayUpload.dependsOn assemble
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.1'
}

// oss.jfrog.org artifactory repository
artifactory {
  contextUrl = 'https://oss.jfrog.org/artifactory'
  publish {
    repository {
      if (project.version.endsWith('-SNAPSHOT'))
        repoKey = 'oss-snapshot-local'
      else
        repoKey = 'oss-release-local'
      username = project.bintrayUser
      password = project.bintrayKey
    }
    defaults {
      publications 'mavenJava'
    }
  }
  resolve {
    repository {
      repoKey = 'repo'
    }
  }
}